/**
 * MedLog REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';
import PaginatedResponseStudyPermissionRead from '../model/PaginatedResponseStudyPermissionRead';
import StudyId from '../model/StudyId';
import StudyPermisson from '../model/StudyPermisson';
import StudyPermissonUpdate from '../model/StudyPermissonUpdate';

/**
* StudyPermissions service.
* @module api/StudyPermissionsApi
* @version 0.0.1
*/
export default class StudyPermissionsApi {

    /**
    * Constructs a new StudyPermissionsApi. 
    * @alias module:api/StudyPermissionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrUpdatePermissionStudyStudyIdPermissionsUserIdPut operation.
     * @callback module:api/StudyPermissionsApi~createOrUpdatePermissionStudyStudyIdPermissionsUserIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StudyPermissonUpdate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Or Update Permission
     * Create or update new study permision for a user.
     * @param {String} userId 
     * @param {module:model/StudyId} studyId 
     * @param {module:model/StudyPermissonUpdate} studyPermissonUpdate 
     * @param {module:api/StudyPermissionsApi~createOrUpdatePermissionStudyStudyIdPermissionsUserIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StudyPermissonUpdate}
     */
    createOrUpdatePermissionStudyStudyIdPermissionsUserIdPut(userId, studyId, studyPermissonUpdate, callback) {
      let postBody = studyPermissonUpdate;
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling createOrUpdatePermissionStudyStudyIdPermissionsUserIdPut");
      }
      // verify the required parameter 'studyId' is set
      if (studyId === undefined || studyId === null) {
        throw new Error("Missing the required parameter 'studyId' when calling createOrUpdatePermissionStudyStudyIdPermissionsUserIdPut");
      }
      // verify the required parameter 'studyPermissonUpdate' is set
      if (studyPermissonUpdate === undefined || studyPermissonUpdate === null) {
        throw new Error("Missing the required parameter 'studyPermissonUpdate' when calling createOrUpdatePermissionStudyStudyIdPermissionsUserIdPut");
      }

      let pathParams = {
        'user_id': userId,
        'study_id': studyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StudyPermissonUpdate;
      return this.apiClient.callApi(
        '/study/{study_id}/permissions/{user_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPermissionDetailsStudyStudyIdPermissionsPermissionIdGet operation.
     * @callback module:api/StudyPermissionsApi~getPermissionDetailsStudyStudyIdPermissionsPermissionIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StudyPermisson} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Permission Details
     * List all medicine intakes of one probands last completed interview.
     * @param {String} permissionId 
     * @param {module:model/StudyId} studyId 
     * @param {module:api/StudyPermissionsApi~getPermissionDetailsStudyStudyIdPermissionsPermissionIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StudyPermisson}
     */
    getPermissionDetailsStudyStudyIdPermissionsPermissionIdGet(permissionId, studyId, callback) {
      let postBody = null;
      // verify the required parameter 'permissionId' is set
      if (permissionId === undefined || permissionId === null) {
        throw new Error("Missing the required parameter 'permissionId' when calling getPermissionDetailsStudyStudyIdPermissionsPermissionIdGet");
      }
      // verify the required parameter 'studyId' is set
      if (studyId === undefined || studyId === null) {
        throw new Error("Missing the required parameter 'studyId' when calling getPermissionDetailsStudyStudyIdPermissionsPermissionIdGet");
      }

      let pathParams = {
        'permission_id': permissionId,
        'study_id': studyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StudyPermisson;
      return this.apiClient.callApi(
        '/study/{study_id}/permissions/{permission_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listStudyPermissionsStudyStudyIdPermissionsGet operation.
     * @callback module:api/StudyPermissionsApi~listStudyPermissionsStudyStudyIdPermissionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseStudyPermissionRead} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Study Permissions
     * List all access permissons for a study. User must be system admin, system user manager or study admin to see these.
     * @param {module:model/StudyId} studyId 
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/StudyPermissionsApi~listStudyPermissionsStudyStudyIdPermissionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseStudyPermissionRead}
     */
    listStudyPermissionsStudyStudyIdPermissionsGet(studyId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'studyId' is set
      if (studyId === undefined || studyId === null) {
        throw new Error("Missing the required parameter 'studyId' when calling listStudyPermissionsStudyStudyIdPermissionsGet");
      }

      let pathParams = {
        'study_id': studyId
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponseStudyPermissionRead;
      return this.apiClient.callApi(
        '/study/{study_id}/permissions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
