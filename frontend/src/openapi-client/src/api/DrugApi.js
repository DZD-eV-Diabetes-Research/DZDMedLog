/**
 * MedLog REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Applikationsform from '../model/Applikationsform';
import HTTPValidationError from '../model/HTTPValidationError';
import PaginatedResponseApoPflicht from '../model/PaginatedResponseApoPflicht';
import PaginatedResponseApplikationsform from '../model/PaginatedResponseApplikationsform';
import PaginatedResponseDarreichungsform from '../model/PaginatedResponseDarreichungsform';
import PaginatedResponseGenerikakennung from '../model/PaginatedResponseGenerikakennung';
import PaginatedResponseMedLogSearchEngineResult from '../model/PaginatedResponseMedLogSearchEngineResult';
import PaginatedResponseNormpackungsgroessen from '../model/PaginatedResponseNormpackungsgroessen';
import PaginatedResponsePreisart from '../model/PaginatedResponsePreisart';
import PaginatedResponseStammRead from '../model/PaginatedResponseStammRead';
import StammRead from '../model/StammRead';

/**
* Drug service.
* @module api/DrugApi
* @version 0.0.1
*/
export default class DrugApi {

    /**
    * Constructs a new DrugApi. 
    * @alias module:api/DrugApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDrugDrugByPznPznGet operation.
     * @callback module:api/DrugApi~getDrugDrugByPznPznGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StammRead} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Drug
     * Get a drugs data by its PZN
     * @param {String} pzn 
     * @param {module:api/DrugApi~getDrugDrugByPznPznGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StammRead}
     */
    getDrugDrugByPznPznGet(pzn, callback) {
      let postBody = null;
      // verify the required parameter 'pzn' is set
      if (pzn === undefined || pzn === null) {
        throw new Error("Missing the required parameter 'pzn' when calling getDrugDrugByPznPznGet");
      }

      let pathParams = {
        'pzn': pzn
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StammRead;
      return this.apiClient.callApi(
        '/drug/by-pzn/{pzn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listApopflichtDrugEnumApopflichtGet operation.
     * @callback module:api/DrugApi~listApopflichtDrugEnumApopflichtGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseApoPflicht} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Apopflicht
     * list ApoPflicht
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/DrugApi~listApopflichtDrugEnumApopflichtGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseApoPflicht}
     */
    listApopflichtDrugEnumApopflichtGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponseApoPflicht;
      return this.apiClient.callApi(
        '/drug/enum/apopflicht', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listApopflichtDrugEnumPreisartGet operation.
     * @callback module:api/DrugApi~listApopflichtDrugEnumPreisartGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponsePreisart} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Apopflicht
     * list Preisart
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/DrugApi~listApopflichtDrugEnumPreisartGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponsePreisart}
     */
    listApopflichtDrugEnumPreisartGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponsePreisart;
      return this.apiClient.callApi(
        '/drug/enum/preisart', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listApplikationsformsDrugEnumAppformGet operation.
     * @callback module:api/DrugApi~listApplikationsformsDrugEnumAppformGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseApplikationsform} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Applikationsforms
     * list Applikationsform
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/DrugApi~listApplikationsformsDrugEnumAppformGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseApplikationsform}
     */
    listApplikationsformsDrugEnumAppformGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponseApplikationsform;
      return this.apiClient.callApi(
        '/drug/enum/appform', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listApplikationsformsDrugEnumAppformKeyGet operation.
     * @callback module:api/DrugApi~listApplikationsformsDrugEnumAppformKeyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Applikationsform} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Applikationsforms
     * list Applikationsform
     * @param {String} key 
     * @param {module:api/DrugApi~listApplikationsformsDrugEnumAppformKeyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Applikationsform}
     */
    listApplikationsformsDrugEnumAppformKeyGet(key, callback) {
      let postBody = null;
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling listApplikationsformsDrugEnumAppformKeyGet");
      }

      let pathParams = {
        'key': key
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Applikationsform;
      return this.apiClient.callApi(
        '/drug/enum/appform/{key}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listDarreichungsformsDrugEnumDarrformGet operation.
     * @callback module:api/DrugApi~listDarreichungsformsDrugEnumDarrformGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseDarreichungsform} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Darreichungsforms
     * list ...
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/DrugApi~listDarreichungsformsDrugEnumDarrformGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseDarreichungsform}
     */
    listDarreichungsformsDrugEnumDarrformGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponseDarreichungsform;
      return this.apiClient.callApi(
        '/drug/enum/darrform', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listDrugsDrugGet operation.
     * @callback module:api/DrugApi~listDrugsDrugGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseStammRead} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Drugs
     * List all medicine/drugs from the system. Needs admin role.
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/DrugApi~listDrugsDrugGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseStammRead}
     */
    listDrugsDrugGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponseStammRead;
      return this.apiClient.callApi(
        '/drug', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listGenerikakennsDrugEnumGenerikakennGet operation.
     * @callback module:api/DrugApi~listGenerikakennsDrugEnumGenerikakennGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseGenerikakennung} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Generikakenns
     * list Generikakennung
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/DrugApi~listGenerikakennsDrugEnumGenerikakennGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseGenerikakennung}
     */
    listGenerikakennsDrugEnumGenerikakennGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponseGenerikakennung;
      return this.apiClient.callApi(
        '/drug/enum/generikakenn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPackgroesseDrugEnumNormpackungsgroessenGet operation.
     * @callback module:api/DrugApi~listPackgroesseDrugEnumNormpackungsgroessenGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseNormpackungsgroessen} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Packgroesse
     * list normpackungsgroessen
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/DrugApi~listPackgroesseDrugEnumNormpackungsgroessenGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseNormpackungsgroessen}
     */
    listPackgroesseDrugEnumNormpackungsgroessenGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponseNormpackungsgroessen;
      return this.apiClient.callApi(
        '/drug/enum/normpackungsgroessen', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchDrugsDrugSearchGet operation.
     * @callback module:api/DrugApi~searchDrugsDrugSearchGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseMedLogSearchEngineResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search Drugs
     * Search medicine/drugs from the system
     * @param {String} searchTerm A search term. Can be multiple words or a single one. One word must be at least 3 chars or contained in a longer quoted string (e.g. `'Salofalk 1 g'` instead of `Salofalk 1 g`)
     * @param {Object} opts Optional parameters
     * @param {String} [pznContains] 
     * @param {String} [filterPackgroesse] 
     * @param {String} [filterDarrform] 
     * @param {String} [filterAppform] 
     * @param {String} [filterNormpackungsgroeeZuzahlstufe] 
     * @param {String} [filterAtcLevel2] 
     * @param {String} [filterGenerikakenn] 
     * @param {Number} [filterApopflicht] 
     * @param {String} [filterPreisartNeu] 
     * @param {Boolean} [onlyCurrentMedications = true)] 
     * @param {Number} [offset = 0)] 
     * @param {Number} [limit = 100)] 
     * @param {String} [orderBy] 
     * @param {Boolean} [orderDesc = false)] 
     * @param {module:api/DrugApi~searchDrugsDrugSearchGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseMedLogSearchEngineResult}
     */
    searchDrugsDrugSearchGet(searchTerm, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'searchTerm' is set
      if (searchTerm === undefined || searchTerm === null) {
        throw new Error("Missing the required parameter 'searchTerm' when calling searchDrugsDrugSearchGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'search_term': searchTerm,
        'pzn_contains': opts['pznContains'],
        'filter_packgroesse': opts['filterPackgroesse'],
        'filter_darrform': opts['filterDarrform'],
        'filter_appform': opts['filterAppform'],
        'filter_normpackungsgroeße_zuzahlstufe': opts['filterNormpackungsgroeeZuzahlstufe'],
        'filter_atc_level2': opts['filterAtcLevel2'],
        'filter_generikakenn': opts['filterGenerikakenn'],
        'filter_apopflicht': opts['filterApopflicht'],
        'filter_preisart_neu': opts['filterPreisartNeu'],
        'only_current_medications': opts['onlyCurrentMedications'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order_by': opts['orderBy'],
        'order_desc': opts['orderDesc']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2PasswordBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedResponseMedLogSearchEngineResult;
      return this.apiClient.callApi(
        '/drug/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
