/**
 * MedLog REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Normpackungsgroessen from './Normpackungsgroessen';
import TotalCount from './TotalCount';

/**
 * The PaginatedResponseNormpackungsgroessen model module.
 * @module model/PaginatedResponseNormpackungsgroessen
 * @version 0.0.1
 */
class PaginatedResponseNormpackungsgroessen {
    /**
     * Constructs a new <code>PaginatedResponseNormpackungsgroessen</code>.
     * @alias module:model/PaginatedResponseNormpackungsgroessen
     * @param offset {Number} Starting position index of the returned items in the dataset.
     * @param count {Number} Number of items returned in the response
     * @param items {Array.<module:model/Normpackungsgroessen>} List of items returned in the response following given criteria
     */
    constructor(offset, count, items) { 
        
        PaginatedResponseNormpackungsgroessen.initialize(this, offset, count, items);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, offset, count, items) { 
        obj['offset'] = offset;
        obj['count'] = count;
        obj['items'] = items;
    }

    /**
     * Constructs a <code>PaginatedResponseNormpackungsgroessen</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaginatedResponseNormpackungsgroessen} obj Optional instance to populate.
     * @return {module:model/PaginatedResponseNormpackungsgroessen} The populated <code>PaginatedResponseNormpackungsgroessen</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaginatedResponseNormpackungsgroessen();

            if (data.hasOwnProperty('total_count')) {
                obj['total_count'] = TotalCount.constructFromObject(data['total_count']);
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [Normpackungsgroessen]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaginatedResponseNormpackungsgroessen</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaginatedResponseNormpackungsgroessen</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaginatedResponseNormpackungsgroessen.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `total_count`
        if (data['total_count']) { // data not null
          TotalCount.validateJSON(data['total_count']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                Normpackungsgroessen.validateJSON(item);
            };
        }

        return true;
    }


}

PaginatedResponseNormpackungsgroessen.RequiredProperties = ["offset", "count", "items"];

/**
 * @member {module:model/TotalCount} total_count
 */
PaginatedResponseNormpackungsgroessen.prototype['total_count'] = undefined;

/**
 * Starting position index of the returned items in the dataset.
 * @member {Number} offset
 */
PaginatedResponseNormpackungsgroessen.prototype['offset'] = undefined;

/**
 * Number of items returned in the response
 * @member {Number} count
 */
PaginatedResponseNormpackungsgroessen.prototype['count'] = undefined;

/**
 * List of items returned in the response following given criteria
 * @member {Array.<module:model/Normpackungsgroessen>} items
 */
PaginatedResponseNormpackungsgroessen.prototype['items'] = undefined;






export default PaginatedResponseNormpackungsgroessen;

