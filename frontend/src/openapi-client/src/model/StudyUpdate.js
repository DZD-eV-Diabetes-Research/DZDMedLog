/**
 * MedLog REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DisplayName from './DisplayName';

/**
 * The StudyUpdate model module.
 * @module model/StudyUpdate
 * @version 0.0.1
 */
class StudyUpdate {
    /**
     * Constructs a new <code>StudyUpdate</code>.
     * @alias module:model/StudyUpdate
     */
    constructor() { 
        
        StudyUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StudyUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StudyUpdate} obj Optional instance to populate.
     * @return {module:model/StudyUpdate} The populated <code>StudyUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StudyUpdate();

            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = DisplayName.constructFromObject(data['display_name']);
            }
            if (data.hasOwnProperty('deactivated')) {
                obj['deactivated'] = ApiClient.convertToType(data['deactivated'], 'Boolean');
            }
            if (data.hasOwnProperty('no_permissions')) {
                obj['no_permissions'] = ApiClient.convertToType(data['no_permissions'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StudyUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StudyUpdate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `display_name`
        if (data['display_name']) { // data not null
          DisplayName.validateJSON(data['display_name']);
        }

        return true;
    }


}



/**
 * @member {module:model/DisplayName} display_name
 */
StudyUpdate.prototype['display_name'] = undefined;

/**
 * @member {Boolean} deactivated
 * @default false
 */
StudyUpdate.prototype['deactivated'] = false;

/**
 * If this is set to True all user have access as interviewers to the study. This can be utile when this MedLog instance only host one study.  Admin access still need to be allocated explicit.
 * @member {Boolean} no_permissions
 * @default false
 */
StudyUpdate.prototype['no_permissions'] = false;






export default StudyUpdate;

