/**
 * MedLog REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Completed from './Completed';
import Name from './Name';

/**
 * The EventUpdate model module.
 * @module model/EventUpdate
 * @version 0.0.1
 */
class EventUpdate {
    /**
     * Constructs a new <code>EventUpdate</code>.
     * @alias module:model/EventUpdate
     */
    constructor() { 
        
        EventUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventUpdate} obj Optional instance to populate.
     * @return {module:model/EventUpdate} The populated <code>EventUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventUpdate();

            if (data.hasOwnProperty('name')) {
                obj['name'] = Name.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('completed')) {
                obj['completed'] = Completed.constructFromObject(data['completed']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventUpdate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `name`
        if (data['name']) { // data not null
          Name.validateJSON(data['name']);
        }
        // validate the optional field `completed`
        if (data['completed']) { // data not null
          Completed.validateJSON(data['completed']);
        }

        return true;
    }


}



/**
 * @member {module:model/Name} name
 */
EventUpdate.prototype['name'] = undefined;

/**
 * @member {module:model/Completed} completed
 */
EventUpdate.prototype['completed'] = undefined;






export default EventUpdate;

