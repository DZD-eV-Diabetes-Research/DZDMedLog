name: Publish Docker image

on:
  release:
    types: [published]
  push:
    branches:
      - dev

jobs:
  push_prod_release_image:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_DZD_USERNAME }}
          password: ${{ secrets.DOCKERHUB_DZD_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: dzdde/dzdmedlog

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_DZD_USERNAME }}
          password: ${{ secrets.DOCKERHUB_DZD_PASSWORD }}
          repository: dzdde/dzdmedlog
          short-description: "The server module for DZDMedLog, a system to document the medical history of study participant."
          enable-url-completion: true
          readme-filepath: "DOCKERHUB_README.md"

  push_dev_commit_image:
    name: Build and tag dev image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # important! to get the tag list

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_DZD_USERNAME }}
          password: ${{ secrets.DOCKERHUB_DZD_PASSWORD }}

      - name: Build Docker image (dev)
        id: build_image
        run: |
          docker build -t dzdde/dzdmedlog:dev .

      - name: Extract version from built Docker image
        id: get_version
        run: |
          # Extract version from the image
          VERSION=$(docker run --entrypoint python3 --rm dzdde/dzdmedlog:dev -c "import re; exec(open('__version__.py').read()); print(__version__)")
          # Optionally sanitize the version string
          SANITIZED_VERSION=${VERSION//+/_}
          echo "version=${SANITIZED_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Tag and push Docker image (dev)
        run: |
          docker tag dzdde/dzdmedlog:dev dzdde/dzdmedlog:${{ steps.get_version.outputs.version }}
          docker push --all-tags dzdde/dzdmedlog
